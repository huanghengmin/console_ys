#删除序列
drop_sequences=drop sequence schema.INETEC_SEQUENCES
#查询sequence
query_sequence=select sequence_name from sys.all_sequences where sys.all_sequences.sequence_owner='schema' and sequence_name='INETEC_SEQUENCES'
#创建序列
create_sequences=CREATE SEQUENCE schema.INETEC_SEQUENCES INCREMENT BY 1 START WITH 1 MAXVALUE 1.0E28 MINVALUE 1

#创建TODO表
create_temptable=create table schema.temptable(ID NUMBER(10) not null,DBNAME VARCHAR2(255) not null,TABLENAME VARCHAR2(255) not null,PKS VARCHAR2(4000) not null,OP VARCHAR2(2) not null,OP_TIME DATE default SYSDATE,CONSTRAINT schema_temptable_ID_PK PRIMARY KEY (ID))
#查询temptable
query_temptable=select table_name from sys.all_all_tables where owner='schema' and table_name ='tablename'
#删除temptable
drop_temptable=drop table schema.temptable
#查询trigger
query_trigger=select trigger_name from sys.user_triggers where table_owner=UPPER('schema') and trigger_name = 'triggername'
##插入
insert_trigger=create or replace trigger schema.triggername after insert on schema.table_name for each row DECLARE strVals  varchar2(2550); begin select (pkpatterns)INTO strVals from dual; insert into schema.temptable (id,dbname,tablename,pks,op) values(schema.INETEC_SEQUENCES.nextval,'schema','table_name','pknames;pktypes;'||strVals||';','I');end;
#更新
update_trigger=create or replace trigger schema.triggername after update on schema.table_name for each row DECLARE strVals  varchar2(2550); begin select (pkpatterns)INTO strVals from dual; insert into schema.temptable (id,dbname,tablename,pks,op) values(schema.INETEC_SEQUENCES.nextval,'schema','table_name','pknames;pktypes;'||strVals||';','U');end;
#删除
delete_trigger=create or replace trigger schema.triggername after delete on schema.table_name for each row DECLARE strVals  varchar2(2550); begin select (pkpatterns)INTO strVals from dual; insert into schema.temptable (id,dbname,tablename,pks,op) values(schema.INETEC_SEQUENCES.nextval,'schema','table_name','pknames;pktypes;'||strVals||';','D');end;
#删除触发器
drop_trigger=drop trigger schema.triggername
#查询所有的触发器
query_all_trigger=select * from sys.user_triggers where table_owner=UPPER('schema') and table_name ='tablename'

#add by ztt
create_function_var2arr=create or replace function schema.dbname_string_array(src varchar2,delimiter varchar2,arr_num varchar2) return varchar2 is arr_str varchar(500);sub_st number :=0;sub_ed number:=length(src);begin if arr_num <> 0 then sub_st:=instr(src,delimiter,1,arr_num);end if;sub_ed:=instr(src,delimiter,1,arr_num+1);if sub_ed <= sub_st or sub_ed > length(src) then sub_ed:=length(src);else sub_ed:=sub_ed-1;end if;arr_str:=substr(src,sub_st+1,sub_ed-sub_st);return arr_str;end;
create_function_gettablename=create or replace function schema.dbname_get_temptable_name(n_tempno  number,n_tempcount number,v_tempnames varchar2) return varchar2 is out_tempname varchar2(100);begin if n_tempno > n_tempcount then out_tempname := schema.dbname_string_array(v_tempnames,',',0); else out_tempname := schema.dbname_string_array(v_tempnames,',',n_tempno); end if; return out_tempname;end;

#查询函数
query_function=select * from sys.user_objects where object_type='FUNCTION' and object_name='fun_name'
delete_function_var2arr=drop function schema.dbname_string_array
delete_function_gettablename=drop function schema.dbname_get_temptable_name
#一个应用一个序列
create_more_sequences=CREATE SEQUENCE schema.INETEC_app INCREMENT BY 1 START WITH 1 MAXVALUE 1.0E28 MINVALUE 1
#删除序列
drop_more_sequences=drop sequence schema.INETEC_app
#查询sequence
query_more_sequence=select sequence_name from sys.all_sequences where sys.all_sequences.sequence_owner='schema' and sequence_name='seq_name'
#插入触发器,增加触发
insert_more_trigger=create or replace trigger schema.triggername after insert on schema.table_name_ for each row DECLARE strVals  varchar2(2550);v_num number:=0;tempTables varchar2(5000):='temp_table_str';temptablenum number :=temp_table_num;tempTableName varchar2(100) ;v_insert_sql varchar(500); begin select (pkpatterns)INTO strVals from dual;select schema.sequence.nextval into v_num from sys.dual; temptablename := dbname_str_get_temptable_name(mod(v_num,temptablenum),temptablenum,temptables);v_insert_sql:='insert into '||tempTableName|| ' (id,dbname,tablename ,pks,op) values(:1,:2,:3,:4,:5)';execute immediate v_insert_sql using v_num,'schema','table_name_','pknames;pktypes;'||strVals||';','I';end;
